params {
  fastq = "data/*_R{1,2}_001.*"
  //TODO: how do i get both _1 and _2 fastq files??

  // TRIMMOMATIC //
  // Perform a sliding window trimming, cutting once the average quality
  // within the window falls below a threshold
  trimSlidingWindow = '5:20'
  // Cut bases off the start of a read, if below a threshold quality
  trimLeading = '3'
  // Cut bases off the end of a read, if below a threshold quality
  trimTrailing = '3'
  // Drop the read if it is below a specified length
  trimMinLength = '55'


   // SPADES //
   // The minimum number of reads to consider an edge in the de Bruijn
   // graph during the assembly.
   spadesMinCoverage = 2
   // Minimum contigs K-mer coverage. After assembly only keep contigs with
   // reported k-mer coverage equal or above this value
   spadesMinKmerCoverage = 2
   // If 'auto' the SPAdes k-mer lengths will be determined from the maximum
   // read length of each assembly. If 'default', SPAdes will use the default
   // k-mer lengths. Otherwise, specify the k-mer lengths manually like:
   // '55 77 99 113 127'
   spadesKmers = 'auto'

}

env {
  PYTHONPATH = "$baseDir/templates"
}

process {
  $fastQC.container = 'ummidock/fastqc:0.11.5'
  $trimmomatic.container = 'ummidock/trimmomatic:0.36'
  $trimmomatic.memory = "2GB"
  $bowtie.container = 'cimendes/bowtie2_hg19:2.0'
  $metaspades.container = 'ummidock/spades:3.11.1-1'
  $card_rgi_assembly.container = 'cimendes/card_rgi:4.0.2'
}

profiles {
  standard {
    docker.enabled = true
    process {
      $fastQC.cpus = 3
      $bowtie.cpus = 3
      $bowtie_assembly.cpus = 3
    }
  }
  lobo{
    process.executor = "slurm"
    shifter.enabled = true
    process.clusterOptions = "--exclude=compute-1"
  }
}